{"version":3,"file":"static/js/132.af1b23b6.chunk.js","mappings":"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","sources":["modules/ContactForm/initialState.js","webpack://goit-react-hw-08-phonebook-whith-styles/./src/modules/ContactForm/contactForm.module.css?93b0","modules/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook-whith-styles/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook-whith-styles/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-celectors.js","webpack://goit-react-hw-08-phonebook-whith-styles/./src/components/contacts.module.css?c6e4","components/Contacts.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["const initialState = { name: '', number: '' };\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__4FI2h\",\"headerContact\":\"contactForm_headerContact__nfH5L\",\"label\":\"contactForm_label__7gvKH\",\"inputField\":\"contactForm_inputField__FuSS1\",\"button\":\"contactForm_button__l3fs9\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport initialState from './initialState';\nimport contactForm from './contactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const hendleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setState({ ...initialState });\n  };\n  const { name, number } = state;\n  return (\n    <form className={contactForm.form} onSubmit={hendleSubmit}>\n      <h1 className={contactForm.headerContact}>Contacts</h1>\n      <label className={contactForm.label}>\n        Name\n        <input\n          className={contactForm.inputField}\n          onChange={hendleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"input name\"\n        />\n      </label>\n      <label className={contactForm.label}>\n        Number\n        <input\n          className={contactForm.inputField}\n          onChange={hendleChange}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          placeholder=\"input number\"\n        />\n      </label>\n\n      <button className={contactForm.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__R0BG5\",\"listItem\":\"contactList_listItem__Lgyat\",\"listItemValue\":\"contactList_listItemValue__yQv16\",\"listItemText\":\"contactList_listItemText__OrMTQ\",\"call\":\"contactList_call__zKAiq\",\"button\":\"contactList_button__twtQb\",\"delConfirmText\":\"contactList_delConfirmText__fPpcT\",\"changeLabel\":\"contactList_changeLabel__TeC3S\",\"changeFieldName\":\"contactList_changeFieldName__+3bM1\",\"changeFieldNumber\":\"contactList_changeFieldNumber__jaVok\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport contactList from './contactList.module.css';\n\nconst ContactList = ({ deleteContact, items, changeContact }) => {\n  const [isDelete, setDelete] = useState('');\n  const [isChange, setChange] = useState({});\n  console.log('change', isChange);\n\n  const hendleChange = ({ target }) => {\n    const { name, value } = target;\n    setChange(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n  // const changeContact = isChange => {};\n\n  // onClick={() => deleteContact(id, name, number)}\n  const elements = items.map(({ id, name, number }) => (\n    <li className={contactList.listItem} key={id}>\n      {isChange.id !== id && (\n        <div className={contactList.listItemValue}>\n          <span className={contactList.listItemText}>{name}</span>\n          <span className={contactList.listItemText}>{number}</span>\n        </div>\n      )}\n      {isChange.id === id && (\n        <label className={contactList.changeLabel}>\n          <input\n            className={contactList.changeFieldName}\n            onChange={hendleChange}\n            type=\"text\"\n            name=\"name\"\n            value={isChange.name}\n          />\n\n          <input\n            className={contactList.changeFieldNumber}\n            onChange={hendleChange}\n            type=\"text\"\n            name=\"number\"\n            value={isChange.number}\n          />\n        </label>\n      )}\n      {isDelete === id && (\n        <>\n          <span className={contactList.delConfirmText}>Delete?</span>\n          <button\n            onClick={() => deleteContact(id)}\n            className={contactList.button}\n          >\n            Yes\n          </button>\n          <button onClick={() => setDelete('')} className={contactList.button}>\n            No\n          </button>\n        </>\n      )}\n      {isChange.id === id && (\n        <>\n          <span className={contactList.delConfirmText}>Modify?</span>\n          <button\n            onClick={() => {\n              changeContact(isChange);\n              setChange({});\n            }}\n            className={contactList.button}\n          >\n            Yes\n          </button>\n          <button onClick={() => setChange({})} className={contactList.button}>\n            No\n          </button>\n        </>\n      )}\n      {(isDelete || isChange.id) !== id && (\n        <>\n          <a\n            href={`tel:+380${number}`}\n            className={contactList.call}\n            type=\"button\"\n          >\n            Call\n          </a>\n          <button\n            onClick={() => setChange({ id, name, number })}\n            className={contactList.button}\n            type=\"button\"\n          >\n            Change\n          </button>\n          <button\n            onClick={() => setDelete(id)}\n            className={contactList.button}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </>\n      )}\n    </li>\n  ));\n  return <ul className={contactList.list}>{elements}</ul>;\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__jh4CL\",\"filterInput\":\"filter_filterInput__2T6yn\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './filter.module.css';\n\nconst Filter = ({ handleChange, value }) => {\n  return (\n    <label className={style.filterLabel}>\n      Find contacts\n      <input\n        value={value}\n        name=\"filter\"\n        onChange={handleChange}\n        className={style.filterInput}\n        type=\"text\"\n        placeholder=\"name or number\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizateFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizateFilter) ||\n      number.toLowerCase().includes(normalizateFilter)\n    );\n  });\n  return result;\n};\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contacts_container__l4bZq\",\"block\":\"contacts_block__n5DNU\"};","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from 'modules/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport {\n  fetchAllContacts,\n  fetchAddContacts,\n  fetchDeleteContacts,\n  fetchChangeContacts,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-celectors';\n\nimport style from './contacts.module.css';\n\nconst Contacts = () => {\n  const filter = useSelector(getFilter);\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = ({ name, number }) => {\n    dispatch(fetchAddContacts({ name, number }));\n  };\n\n  const onDeleteContact = id => {\n    dispatch(fetchDeleteContacts(id));\n  };\n  const onChangeContact = value => {\n    dispatch(fetchChangeContacts(value));\n  };\n\n  const hendleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div className={style.container}>\n      <ContactForm onSubmit={onAddContact} />\n\n      <div className={style.block}>\n        <Filter value={filter} handleChange={hendleFilter} />\n\n        {isContacts && (\n          <ContactList\n            deleteContact={onDeleteContact}\n            items={filteredContacts}\n            changeContact={onChangeContact}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from 'components/Contacts';\n\nconst HomePage = () => {\n  return <Contacts />;\n};\n\nexport default HomePage;\n"],"names":["name","number","onSubmit","useState","initialState","state","setState","hendleChange","target","value","prevState","className","contactForm","e","preventDefault","onChange","type","placeholder","ContactList","deleteContact","items","changeContact","isDelete","setDelete","isChange","setChange","console","log","elements","map","id","contactList","onClick","href","defaultProps","contacts","handleChange","style","getFilteredContacts","filter","normalizateFilter","toLowerCase","includes","getFilter","useSelector","filteredContacts","dispatch","useDispatch","useEffect","fetchAllContacts","isContacts","Boolean","length","fetchAddContacts","setFilter","fetchDeleteContacts","fetchChangeContacts"],"sourceRoot":""}