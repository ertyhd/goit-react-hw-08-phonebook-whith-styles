{"version":3,"file":"static/js/852.ff3ceacb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook-whith-styles/./src/components/contacts.module.scss?7a77","modules/ContactForm/initialState.js","webpack://goit-react-hw-08-phonebook-whith-styles/./src/modules/ContactForm/contactForm.module.scss?880f","modules/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook-whith-styles/./src/components/ContactList/contactList.module.scss?caee","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook-whith-styles/./src/components/Filter/filter.module.scss?8942","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-celectors.js","components/Contacts.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contacts_container__ZfBzD\",\"block\":\"contacts_block__FsH45\",\"noContactWrapper\":\"contacts_noContactWrapper__vzcpd\",\"noContactWrapperText\":\"contacts_noContactWrapperText__32AtX\"};","const initialState = { name: '', number: '' };\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__SUivf\",\"headerContact\":\"contactForm_headerContact__IKLBq\",\"label\":\"contactForm_label__d10BS\",\"inputField\":\"contactForm_inputField__Dm7B0\",\"button\":\"contactForm_button__xzri7\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport initialState from './initialState';\nimport contactForm from './contactForm.module.scss';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  // const hendleChange = ({ target }) => {\n  //   const { name, value } = target;\n  //   setState(prevState => {\n  //     return { ...prevState, [name]: value };\n  //   });\n  // };\n\n  const hendleChange = ({ target }) => {\n    const { name, value } = target;\n    let formattedValue = value;\n    if (name === 'number' && formattedValue.length > 10) {\n      formattedValue = value.replace(\n        /(\\d{3})(\\d{3})(\\d{2})(\\d{2})/,\n        '$1-$2-$3-$4'\n      );\n      formattedValue = formattedValue.slice(0, 13);\n    }\n    // if (formattedValue.length > 13) {\n    //   formattedValue = formattedValue.slice(0, 13);\n    // }\n    setState(prevState => {\n      return { ...prevState, [name]: formattedValue };\n    });\n  };\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setState({ ...initialState });\n  };\n  const { name, number } = state;\n  return (\n    <form className={contactForm.form} onSubmit={hendleSubmit}>\n      <h1 className={contactForm.headerContact}>Contacts</h1>\n      <label className={contactForm.label}>\n        Name\n        <input\n          className={contactForm.inputField}\n          onChange={hendleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"input name\"\n        />\n      </label>\n      <label className={contactForm.label}>\n        Number\n        <input\n          className={contactForm.inputField}\n          onChange={hendleChange}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          placeholder=\"+38 ___-___-__-__ \"\n        />\n      </label>\n\n      <button className={contactForm.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__HUcnp\",\"listItem\":\"contactList_listItem__eGI7W\",\"listItemValue\":\"contactList_listItemValue__GavH0\",\"listItemText\":\"contactList_listItemText__+efTh\",\"listItemTextName\":\"contactList_listItemTextName__Sw6sE\",\"listItemTextNumber\":\"contactList_listItemTextNumber__gyBLX\",\"call\":\"contactList_call__CNwLz\",\"button\":\"contactList_button__JAC30\",\"delConfirmText\":\"contactList_delConfirmText__GPkPU\",\"changeLabel\":\"contactList_changeLabel__WZ9Vg\",\"changeFieldName\":\"contactList_changeFieldName__gJnZU\",\"changeFieldNumber\":\"contactList_changeFieldNumber__akWUC\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport contactList from './contactList.module.scss';\n\nconst ContactList = ({ deleteContact, items, changeContact }) => {\n  const [isDelete, setDelete] = useState('');\n  const [isChange, setChange] = useState({});\n\n  const hendleChange = ({ target }) => {\n    const { name, value } = target;\n    setChange(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const elements = items.map(({ id, name, number }) => (\n    <li className={contactList.listItem} key={id}>\n      {isChange.id !== id && (\n        <div className={contactList.listItemValue}>\n          <span\n            className={`${contactList.listItemText} ${contactList.listItemTextName}`}\n          >\n            {name}\n          </span>\n          <span\n            className={`${contactList.listItemText} ${contactList.listItemTextNumber}`}\n          >\n            {number}\n          </span>\n        </div>\n      )}\n      {isChange.id === id && (\n        <label className={contactList.changeLabel}>\n          <input\n            className={contactList.changeFieldName}\n            onChange={hendleChange}\n            type=\"text\"\n            name=\"name\"\n            value={isChange.name}\n          />\n\n          <input\n            className={contactList.changeFieldNumber}\n            onChange={hendleChange}\n            type=\"text\"\n            name=\"number\"\n            value={isChange.number}\n          />\n        </label>\n      )}\n      {isDelete === id && (\n        <>\n          <span className={contactList.delConfirmText}>Delete?</span>\n          <button\n            onClick={() => deleteContact(id)}\n            className={contactList.button}\n          >\n            Yes\n          </button>\n          <button onClick={() => setDelete('')} className={contactList.button}>\n            No\n          </button>\n        </>\n      )}\n      {isChange.id === id && (\n        <>\n          <span className={contactList.delConfirmText}>Modify?</span>\n          <button\n            onClick={() => {\n              changeContact(isChange);\n              setChange({});\n            }}\n            className={contactList.button}\n          >\n            Yes\n          </button>\n          <button onClick={() => setChange({})} className={contactList.button}>\n            No\n          </button>\n        </>\n      )}\n      {(isDelete || isChange.id) !== id && (\n        <>\n          <a\n            href={`tel:+380${number}`}\n            className={contactList.call}\n            type=\"button\"\n          >\n            Call\n          </a>\n          <button\n            onClick={() => setChange({ id, name, number })}\n            className={contactList.button}\n            type=\"button\"\n          >\n            Change\n          </button>\n          <button\n            onClick={() => setDelete(id)}\n            className={contactList.button}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </>\n      )}\n    </li>\n  ));\n\n  return <ul className={contactList.list}>{elements}</ul>;\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__hyhuX\",\"filterInput\":\"filter_filterInput__tLdb9\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './filter.module.scss';\n\nconst Filter = ({ handleChange, value }) => {\n  return (\n    <label className={style.filterLabel}>\n      Find contacts\n      <input\n        value={value}\n        name=\"filter\"\n        onChange={handleChange}\n        className={style.filterInput}\n        type=\"text\"\n        placeholder=\"input name or number\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizateFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizateFilter) ||\n      number.toLowerCase().includes(normalizateFilter)\n    );\n  });\n  return result;\n};\n","export const getFilter = ({ filter }) => filter;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport style from './contacts.module.scss';\n\nimport ContactForm from 'modules/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport {\n  fetchAllContacts,\n  fetchAddContacts,\n  fetchDeleteContacts,\n  fetchChangeContacts,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-celectors';\n\nconst Contacts = () => {\n  const filter = useSelector(getFilter);\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = ({ name, number }) => {\n    dispatch(fetchAddContacts({ name, number }));\n  };\n\n  const onDeleteContact = id => {\n    dispatch(fetchDeleteContacts(id));\n  };\n  const onChangeContact = value => {\n    dispatch(fetchChangeContacts(value));\n  };\n\n  const hendleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div className={style.container}>\n      <ContactForm onSubmit={onAddContact} />\n\n      <div className={style.block}>\n        <Filter value={filter} handleChange={hendleFilter} />\n\n        {isContacts && (\n          <ContactList\n            deleteContact={onDeleteContact}\n            items={filteredContacts}\n            changeContact={onChangeContact}\n          />\n        )}\n        {!isContacts && (\n          <div className={style.noContactWrapper}>\n            <h2 className={style.noContactWrapperText}>\n              No contacts in list yet\n            </h2>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from 'components/Contacts';\n\nconst HomePage = () => {\n  return <Contacts />;\n};\n\nexport default HomePage;\n"],"names":["name","number","onSubmit","useState","initialState","state","setState","hendleChange","target","value","formattedValue","length","replace","slice","prevState","className","contactForm","e","preventDefault","onChange","type","placeholder","ContactList","deleteContact","items","changeContact","isDelete","setDelete","isChange","setChange","elements","map","id","contactList","onClick","href","defaultProps","contacts","handleChange","style","getFilteredContacts","filter","normalizateFilter","toLowerCase","includes","getFilter","useSelector","filteredContacts","dispatch","useDispatch","useEffect","fetchAllContacts","isContacts","Boolean","fetchAddContacts","setFilter","fetchDeleteContacts","fetchChangeContacts"],"sourceRoot":""}